{"version":3,"names":[],"mappings":"","sources":["admin_browserify.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _router = require('./router');\n\nvar _router2 = _interopRequireDefault(_router);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n$(function () {\n  console.log('ready');\n  var router = new _router2.default();\n\n  $('.multiselect').multiselect({\n    nonSelectedText: 'Выберите значение',\n    numberDisplayed: 1\n  });\n});\n\n},{\"./router\":6}],2:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexports.default = new (function () {\n  function _class() {\n    _classCallCheck(this, _class);\n  }\n\n  _createClass(_class, [{\n    key: 'index',\n\n    /**\n     * Страница создания организации\n     */\n    value: function index() {\n      $('.duplicateForm').click(this._cloneFormField);\n      $('input[name=address]').on('change', this._onChangeAddress);\n    }\n\n    /**\n     * При изменении адреса парсим почтовый индекс и город\n     * @param e\n     * @private\n     */\n\n  }, {\n    key: '_onChangeAddress',\n    value: function _onChangeAddress(e) {\n      var $address = $(e.currentTarget);\n      //  если есть почтовый индекс в адресе вставляем его в соответствующее поле\n      var matches = /^(\\d+)/.exec($address.val());\n      if (matches) $('input[name=postCode]').val(matches[1]);\n\n      // ищем город и выбираем его в выпадающем списке\n      matches = /(?:місто|м\\.)\\s+([а-яїґ]+)/i.exec($address.val());\n      if (matches) {\n        var $select = $('select[name=city]');\n        var $option = $select.find('option').filter(function (key, option) {\n          return $(option).text().toLowerCase() == matches[1].toLowerCase();\n        });\n        $option.attr('selected', 'true');\n        $select.multiselect('refresh');\n      }\n    }\n\n    /**\n     * Дублирование поля ввода\n     * @param e\n     * @private\n     */\n\n  }, {\n    key: '_cloneFormField',\n    value: function _cloneFormField(e) {\n      var $parent = $(e.target.parentNode);\n      $parent.prepend($parent.find('input:first').clone().val(''));\n    }\n  }]);\n\n  return _class;\n}())();\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexports.default = new (function () {\n  function _class() {\n    _classCallCheck(this, _class);\n  }\n\n  _createClass(_class, [{\n    key: 'index',\n\n    /**\n     * Страница со списком организаций\n     */\n    value: function index() {\n      // быстрый поиск по названию и ЕДРПОУ\n      var typeahead = function typeahead(name, field) {\n        var $tp = $('input[name=' + name + ']').typeahead({\n          classNames: {\n            dataset: 'dropdown-menu tt-dataset'\n          }\n        }, {\n          display: field,\n          source: function source(query, callback, asyncCallback) {\n            var data = {};\n            data[name] = query;\n\n            $.ajax({\n              url: '/admin/organization/search',\n              data: data\n            }).then(asyncCallback);\n          }\n        });\n\n        $tp.bind('typeahead:select', function (e, suggestion) {\n          window.open('/admin/organization/' + suggestion.id + '/edit');\n        });\n      };\n\n      typeahead('name', 'fullName');\n      typeahead('edrpou', 'edrpou');\n    }\n  }]);\n\n  return _class;\n}())();\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _helpers = require('../helpers');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Controller = function () {\n  function Controller() {\n    _classCallCheck(this, Controller);\n\n    this.errors = {};\n    this.CHECK_SYMBOLS = /[^АБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЬЮЯабвгґдеєжзиіїйклмнопрстуфхцчшщьюя№ \"'(),-=.\\/0123456789;:I]/;\n    this.CHECK_LETTERS = /[АБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЬЮЯабвгґдеєжзиіїйклмнопрстуфхцчшщьюя]{2,}/;\n  }\n\n  /**\n   * Страница импорта файла работников\n   */\n\n  _createClass(Controller, [{\n    key: 'index',\n    value: function index() {\n      $('input[name=file]').on('change', this._onSelectFile.bind(this));\n    }\n\n    /**\n     * Сохраняем ошибки в одном месте\n     * @param str\n     * @param line\n     * @param symbol\n     */\n\n  }, {\n    key: 'addError',\n    value: function addError(str, line) {\n      var symbol = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n      if (!this.errors[line]) this.errors[line] = [];\n      this.errors[line].push([str, symbol]);\n    }\n\n    /**\n     * Пользователь выбрал файл\n     * @param e\n     * @private\n     */\n\n  }, {\n    key: '_onSelectFile',\n    value: function _onSelectFile(e) {\n      var _this = this;\n\n      var file = e.target.files[0];\n      if (!file) return;\n\n      // вырезаем ЕДРПОУ из нахвания файла\n      var matches = /^(\\d+)\\D/.exec(file.name);\n      if (!matches) return alert('Название файла должно содержать ЕДРПОУ номер организации');\n      var edrpou = matches[1];\n\n      _helpers.helpers.showPreloader();\n      var fileReader = new FileReader();\n      fileReader.onload = function (e) {\n        _this.lines = e.target.result.split(\"\\n\");\n\n        _this._checkFile(edrpou).then(function (FIOErrors, workers, organization) {\n          _this.organization = organization;\n          _this.workers = workers;\n          _this.FIOErrors = FIOErrors;\n\n          _this._showFile();\n          _helpers.helpers.hidePreloader();\n        });\n        //.then(this._showFile.bind(this))\n        //.then(this._checkOrganization)\n        //.then(helpers.hidePreloader);\n      };\n      fileReader.readAsText(file, 'cp1251');\n    }\n  }, {\n    key: '_checkOrganization',\n    value: function _checkOrganization(opt) {\n      console.log(opt);\n    }\n\n    /**\n     * Добавление работников в БД\n     * @param opt\n     * @returns {Promise}\n     * @private\n     */\n\n  }, {\n    key: '_addWorkers',\n    value: function _addWorkers(opt) {\n      return new Promise(function (resolve, reject) {\n        if (opt.errors && opt.errors.length > 0) return reject('file has errors');\n\n        console.log(opt.edrpou);\n      });\n    }\n\n    /**\n     * И тут начинается пиздорез с проверкой\n     * @param edrpou\n     * @private\n     */\n\n  }, {\n    key: '_checkFile',\n    value: function _checkFile(edrpou) {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        var organization = _this2._parseFirstLine(_this2.lines[0]);\n        organization.edrpou = edrpou;\n\n        // получаем сотрудников\n        var workers = { main: { workers: [] } },\n            currentCategory = null,\n            currentSubCategory = null,\n            matches = undefined;\n\n        for (var i = 1; i < _this2.lines.length; i++) {\n          var line = _this2.lines[i].trim();\n          // проверяем на неразрещенные символы\n          matches = _this2.CHECK_SYMBOLS.exec(line);\n          if (matches) {\n            _this2.addError('Неразрещенный символ', i, matches.index);\n          }\n\n          // =категория\n          matches = /^=([^=]+)$/.exec(line);\n          if (matches) {\n            if (currentCategory) _this2.addError('Открытие категории, но предыдущая еще не закрылась', i);\n            currentCategory = matches[1];\n            continue;\n          }\n\n          // закрытие категории \"==\"\n          if (/^\\s*==\\s*$/.test(line)) {\n            if (!currentCategory) _this2.addError('Закрытие категории, но открытия не было', i);\n            currentCategory = null;\n            continue;\n          }\n\n          // -подкатегория\n          matches = /^-([^-].*)$/.exec(line);\n          if (matches) {\n            if (currentSubCategory) _this2.addError('Открытие подкатегории, но предыдущая еще не закрылась', i);\n            if (!currentCategory) _this2.addError('Открытие подкатегории, но родительская категория не была найдена', i);\n            currentSubCategory = matches[1];\n            continue;\n          }\n\n          // закрытие подкатегории \"--\"\n          if (/^\\s*--\\s*$/.test(line)) {\n            if (!currentSubCategory) _this2.addError('Закрытие подкатегории, но открытия не было', i);\n            currentSubCategory = null;\n            continue;\n          }\n\n          // парсим работников\n          var cat = currentCategory ? currentCategory : 'main';\n          if (!workers[cat]) workers[cat] = {\n            workers: [],\n            sub: {}\n          };\n          var curCategoryWorkers = undefined;\n\n          if (currentSubCategory) {\n            if (!workers[cat].sub[currentSubCategory]) workers[cat].sub[currentSubCategory] = [];\n            curCategoryWorkers = workers[cat].sub[currentSubCategory];\n          } else curCategoryWorkers = workers[cat].workers;\n\n          _this2._parseWorker(line, {\n            workers: curCategoryWorkers,\n            line: i\n          });\n        }\n\n        if (currentCategory) _this2.addError('Неверно открыты/закрыты категории.', _this2.lines.length);\n\n        // проверяем работников по БД\n        _this2._checkWorkers(workers).then(function (fioErrors) {\n          resolve(fioErrors, workers, organization);\n        }.bind(_this2));\n      });\n    }\n\n    /**\n     *\n     * @param value\n     * @returns {Object}\n     * @private\n     */\n\n  }, {\n    key: '_parseFirstLine',\n    value: function _parseFirstLine(value) {\n      var data = value.split(','),\n          date = data[0].trim(),\n          workersCount = data[1].trim();\n\n      // проверяем дату\n      if (!/^\\d{2}\\.\\d{2}\\.\\d{4}$/.test(date)) this.addError('Неверный формат даты \"' + date + '\" (должен быть <11.11.2222>)', 0);\n\n      // кол-во сотрудников\n      if (!/^(\\d+|-)$/.test(workersCount)) this.addError('Кол-во сотрудников указано неверно \"' + workersCount + '\" (должно быть число либо <->)', 0);\n\n      return {\n        workersCount: parseInt(data[1].trim()),\n        text: data.slice(2).join(',').trim()\n      };\n    }\n\n    /**\n     *\n     * @param value\n     * @param opt\n     * @private\n     */\n\n  }, {\n    key: '_parseWorker',\n    value: function _parseWorker(value, opt) {\n      var matches = /([^,]+),(.*)$/.exec(value);\n      if (!matches) {\n        this.addError('Невозможно распознать ФИО и должность', opt.line);\n        return;\n      }\n\n      var position = matches[2].trim();\n      if (!this.CHECK_LETTERS.test(position)) {\n        this.addError('Невозможно распознать ФИО и должность', opt.line);\n        return;\n      }\n\n      opt.workers.push({ fio: matches[1].trim(), position: position });\n    }\n\n    /**\n     * Проверяем ФИО по БД\n     * @param workers\n     * @returns {*}\n     * @private\n     */\n\n  }, {\n    key: '_checkWorkers',\n    value: function _checkWorkers(workers) {\n      // отправляем на сервер только массив ФИО\n      var data = [];\n      for (var i in workers) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = workers[i].workers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var worker = _step.value;\n\n            data.push(worker.fio);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        for (var j in workers[i].sub) {\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = workers[i].sub[j][Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var worker = _step2.value;\n\n              data.push(worker.fio);\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n      }\n\n      return $.ajax({\n        url: '/admin/workers/check_new_workers',\n        method: 'post',\n        data: {\n          workers: JSON.stringify(data),\n          _token: window._token\n        }\n      });\n    }\n\n    /**\n     * Выводим файл и ошибки проверки файла\n     * @private\n     */\n\n  }, {\n    key: '_showFile',\n    value: function _showFile() {\n      var _this3 = this;\n\n      var $el = $('.file');\n      $el.html('');\n\n      // выводим построчно весь файл\n\n      var _loop = function _loop(i) {\n        var line = _this3.lines[i],\n            lineErrors = undefined;\n\n        // ошибки в этой строке\n        if (_this3.errors[i]) {\n          lineErrors = _this3.errors[i].map(function (err) {\n            // если есть позиция символа, выделяем его\n            if (err[1]) {\n              var s = line.substr(err[1], 1);\n              line = line.substr(0, err[1]) + ('<span class=\"error-sym\">' + s + '</span>') + line.substr(err[1] + 1);\n            }\n            return err[0] + '<br>';\n          });\n        }\n\n        // если в строке работник и по нему есть ошибки, выводим их\n        if (i != 0 && !/^(--|==)/.test(line) && line.length != 0) {\n          var matches = /([^,]+),/.exec(line);\n          if (matches && _this3.FIOErrors.indexOf(matches[1]) >= 0) {\n            line = '<span class=\"warning-sym\">' + matches[1] + '</span>' + line.substr(matches[1].length);\n          }\n        }\n\n        $el.append(line + '<br>');\n        if (lineErrors) $el.append('<p class=\"alert alert-danger\">' + lineErrors + '</p>');\n      };\n\n      for (var i = 0; i < this.lines.length; i++) {\n        _loop(i);\n      }\n    }\n  }]);\n\n  return Controller;\n}();\n\nexports.default = new Controller();\n\n},{\"../helpers\":5}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar helpers = exports.helpers = {\n  showPreloader: function showPreloader() {\n    $('body').addClass('preloader');\n  },\n\n  hidePreloader: function hidePreloader() {\n    $('body').removeClass('preloader');\n  }\n};\n\n},{}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _organization_create = require('./controllers/organization_create');\n\nvar _organization_create2 = _interopRequireDefault(_organization_create);\n\nvar _organization_workers = require('./controllers/organization_workers');\n\nvar _organization_workers2 = _interopRequireDefault(_organization_workers);\n\nvar _organization_list = require('./controllers/organization_list');\n\nvar _organization_list2 = _interopRequireDefault(_organization_list);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Router =\n/**\n * Прогоняем роутфы и выполняем первый подходящий\n * @param url\n */\nfunction Router() {\n  var url = arguments.length <= 0 || arguments[0] === undefined ? window.location.pathname : arguments[0];\n\n  _classCallCheck(this, Router);\n\n  // роуты добавлять здесь\n  var rules = [[_organization_list2.default.index.bind(_organization_list2.default), /admin\\/organization$/], [_organization_create2.default.index.bind(_organization_create2.default), /admin\\/organization\\/(create|\\d+\\/edit)$/], [_organization_workers2.default.index.bind(_organization_workers2.default), /admin\\/organization\\/\\d+\\/workers$/]];\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = rules[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var rule = _step.value;\n\n      if (rule[1].test(url)) {\n        if (typeof rule[0] != 'function') throw new Error('invalid route method \\'' + rule[1] + '\\'');\n        rule[0]();\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n};\n\nexports.default = Router;\n\n},{\"./controllers/organization_create\":2,\"./controllers/organization_list\":3,\"./controllers/organization_workers\":4}]},{},[1]);\n"],"file":"admin_browserify.js","sourceRoot":"/source/"}