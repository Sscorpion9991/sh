{"version":3,"names":[],"mappings":"","sources":["admin_browserify.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\nvar _router = require('./router');\n\nvar _router2 = _interopRequireDefault(_router);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n$(function () {\n  console.log('ready');\n  var router = new _router2.default();\n\n  // добавляем всем ajax запросам csrf token\n  $.ajaxSetup({\n    headers: {\n      'X-CSRF-Token': window._token\n    }\n  });\n\n  // плагин для селектов\n  $('.multiselect').multiselect({\n    nonSelectedText: 'Выберите значение',\n    numberDisplayed: 1\n  });\n});\n\n},{\"./router\":9}],2:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexports.default = new (function () {\n  function _class() {\n    _classCallCheck(this, _class);\n  }\n\n  _createClass(_class, [{\n    key: 'index',\n\n    /**\n     * Страница создания организации\n     */\n    value: function index() {\n      $('.duplicateForm').click(this._cloneFormField);\n      $('input[name=address]').on('change', this._onChangeAddress);\n    }\n\n    /**\n     * При изменении адреса парсим почтовый индекс и город\n     * @param e\n     * @private\n     */\n\n  }, {\n    key: '_onChangeAddress',\n    value: function _onChangeAddress(e) {\n      var $address = $(e.currentTarget);\n      //  если есть почтовый индекс в адресе вставляем его в соответствующее поле\n      var matches = /^(\\d+)/.exec($address.val());\n      if (matches) $('input[name=postCode]').val(matches[1]);\n\n      // ищем город и выбираем его в выпадающем списке\n      matches = /(?:місто|м\\.)\\s*([а-яїґ]+)/i.exec($address.val());\n      if (matches) {\n        var $select = $('select[name=city]');\n        var $option = $select.find('option').filter(function (key, option) {\n          return $(option).text().toLowerCase() == matches[1].toLowerCase();\n        });\n\n        $option.attr('selected', 'true');\n        $select.multiselect('refresh');\n      }\n    }\n\n    /**\n     * Дублирование поля ввода\n     * @param e\n     * @private\n     */\n\n  }, {\n    key: '_cloneFormField',\n    value: function _cloneFormField(e) {\n      var $parent = $(e.target.parentNode);\n      $parent.prepend($parent.find('input:first').clone().val(''));\n    }\n  }]);\n\n  return _class;\n}())();\n\n},{}],3:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexports.default = new (function () {\n  function _class() {\n    _classCallCheck(this, _class);\n  }\n\n  _createClass(_class, [{\n    key: 'index',\n\n    /**\n     * Страница со списком запросов\n     */\n    value: function index() {\n      $('.inquiry').click(function (e) {\n        var $el = $(e.currentTarget);\n        console.log($el.data('note'));\n        var newNote = prompt('Примечание к запросу:', $el.data('note'));\n        if (newNote === null) return;\n\n        return $.ajax({\n          url: '/admin/api/organization_inquiry/' + $el.data('id'),\n          method: 'post',\n          data: { note: newNote },\n          success: location.reload.bind(location)\n        });\n      });\n    }\n  }]);\n\n  return _class;\n}())();\n\n},{}],4:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexports.default = new (function () {\n  function _class() {\n    _classCallCheck(this, _class);\n  }\n\n  _createClass(_class, [{\n    key: 'index',\n\n    /**\n     * Страница со списком организаций\n     */\n    value: function index() {\n      // быстрый поиск по названию и ЕДРПОУ\n      var typeahead = function typeahead(name, field) {\n        var $tp = $('input[name=' + name + ']').typeahead({\n          highlight: true,\n          classNames: { dataset: 'dropdown-menu tt-dataset' }\n        }, {\n          async: true,\n          limit: 7,\n          display: field,\n          templates: {\n            notFound: function notFound() {\n              return 'Ничего не найдено';\n            },\n            pending: function pending() {\n              return 'Загружаем...';\n            }\n          },\n\n          source: _.debounce(function (query, callback, asyncCallback) {\n            var data = {};\n            data[name] = query;\n\n            $.ajax({\n              url: '/admin/api/organization/search',\n              data: data\n            }).then(asyncCallback);\n          }, 500)\n        });\n\n        $tp.bind('typeahead:select', function (e, suggestion) {\n          window.open('/admin/organization/' + suggestion.id + '/edit');\n        });\n      };\n\n      typeahead('name', 'fullName');\n      typeahead('edrpou', 'edrpou');\n      typeahead('chief', 'fullName');\n\n      $('.show-department-btn').click(this._showDepartments.bind(this));\n      $('.show-all-departments').click(this._showAllDepartments.bind(this));\n    }\n\n    /**\n     * Выводим подразделения\n     * @param e\n     * @private\n     */\n\n  }, {\n    key: '_showDepartments',\n    value: function _showDepartments(e) {\n      var organizationId = $(e.currentTarget).data('organization');\n      $('.department' + organizationId).fadeToggle('fast');\n    }\n\n    /**\n     * Раскрываем все подразделения на странице\n     * @private\n     */\n\n  }, {\n    key: '_showAllDepartments',\n    value: function _showAllDepartments() {\n      var $el = $('tr.department');\n      if ($($el[0]).is(':visible')) $('tr.department').fadeOut('fast');else $('tr.department').fadeIn('fast');\n    }\n  }]);\n\n  return _class;\n}())();\n\n},{}],5:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _helpers = require('../helpers');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Controller = function () {\n  function Controller() {\n    _classCallCheck(this, Controller);\n\n    this.clear();\n    this.CHECK_SYMBOLS = /[^АБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЬЮЯабвгґдеєжзиіїйклмнопрстуфхцчшщьюя№ \"'(),\\-=.\\/0123456789;:I]/;\n    this.CHECK_LETTERS = /[АБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЬЮЯабвгґдеєжзиіїйклмнопрстуфхцчшщьюя]{2,}/;\n    this.CHECK_FIO = /[^\\-.АБВГҐДЕЄЖЗИІЇЙКЛМНОПРСТУФХЦЧШЩЬЮЯабвгґдеєжзиіїйклмнопрстуфхцчшщьюя' ]/;\n  }\n\n  _createClass(Controller, [{\n    key: 'clear',\n    value: function clear() {\n      this.errors = {};\n      this.warnings = {};\n      this.fioDuplicates = [];\n    }\n\n    /**\n     * Страница импорта файла работников\n     */\n\n  }, {\n    key: 'index',\n    value: function index(organizationId) {\n      $('input[name=file]').on('change', this._onSelectFile.bind(this));\n      $('.done').click(this._saveWorkers.bind(this, organizationId));\n    }\n\n    /**\n     * Сохраняем ошибки в одном месте\n     * @param str\n     * @param line\n     * @param symbol\n     */\n\n  }, {\n    key: 'addError',\n    value: function addError(str, line) {\n      var symbol = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n      if (!this.errors[line]) this.errors[line] = [];\n      this.errors[line].push([str, symbol]);\n    }\n\n    /**\n     * Сохраняем ошибки в одном месте\n     * @param str\n     * @param line\n     * @param symbol\n     */\n\n  }, {\n    key: 'addWarning',\n    value: function addWarning(str, line) {\n      var symbol = arguments.length <= 2 || arguments[2] === undefined ? null : arguments[2];\n\n      if (!this.warnings[line]) this.warnings[line] = [];\n      this.warnings[line].push([str, symbol]);\n    }\n\n    /**\n     *\n     * @returns {Promise}\n     * @private\n     */\n\n  }, {\n    key: '_saveWorkers',\n    value: function _saveWorkers(organizationId) {\n      return $.ajax({\n        url: '/admin/api/organization/' + organizationId + '/push_workers',\n        method: 'post',\n        data: {\n          workers: this.workers,\n          date: this.organization.date\n        },\n        success: function success() {\n          window.location.href = '/admin/organization/' + organizationId + '/workers';\n        }\n      });\n    }\n\n    /**\n     * Пользователь выбрал файл\n     * @param e\n     * @private\n     */\n\n  }, {\n    key: '_onSelectFile',\n    value: function _onSelectFile(e) {\n      var _this = this;\n\n      this.clear();\n      var file = e.target.files[0];\n      if (!file) return;\n\n      // вырезаем ЕДРПОУ из нахвания файла\n      var matches = /^(\\d+)\\D/.exec(file.name);\n      if (!matches) return alert('Название файла должно содержать ЕДРПОУ номер организации');\n      var edrpou = matches[1];\n\n      _helpers.helpers.showPreloader();\n      var fileReader = new FileReader();\n      fileReader.onload = function (e) {\n        _this.lines = e.target.result.replace(/[\\t ]+/g, ' ').split(\"\\n\");\n\n        _this._checkFile(edrpou).then(function (opt) {\n          _this.organization = opt.organization;\n          _this.workers = opt.workers;\n          _this.fioErrors = opt.fioErrors;\n\n          return Promise.resolve();\n        }).then(_this._showFile.bind(_this)).then(_this._showOrganization.bind(_this)).then(_this._checkErrors.bind(_this)).then(_helpers.helpers.hidePreloader).catch(_helpers.helpers.hidePreloader);\n      };\n      fileReader.readAsText(file, 'cp1251');\n    }\n\n    /**\n     * Достаем с сервера организацию по ЕДРПОУ из файла и выводим ее,\n     * чтобы можератор мог убедиться что редактирует нужную организацию\n     *\n     * @returns {Promise}\n     * @private\n     */\n\n  }, {\n    key: '_showOrganization',\n    value: function _showOrganization() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        $.ajax({\n          url: '/admin/api/organization/search',\n          method: 'get',\n          data: {\n            edrpou: _this2.organization.edrpou\n          },\n          success: function success(data) {\n            var $el = $('.organization');\n            $el.html('');\n\n            if (!data || data.length == 0) {\n              alert('<p class=\"alert alert-danger\">Организация с ЕДРПОУ ' + _this2.organization.edrpou + ' не найдена</p>');\n              reject();\n            } else {\n              _this2.originOrganization = data[0];\n              $el.html('[' + _this2.organization.edrpou + '] ' + _this2.organization.text + ' = [' + _this2.originOrganization.edrpou + '] ' + _this2.originOrganization.fullName);\n              resolve();\n            }\n          }\n        });\n      });\n    }\n\n    /**\n     * Проверяем, если есть ошибки, сообщаем пользователю.\n     * Если нет то выводим кнопку \"сохранить работников\"\n     *\n     * @returns {*}\n     * @private\n     */\n\n  }, {\n    key: '_checkErrors',\n    value: function _checkErrors() {\n      if (_.isEmpty(this.errors)) {\n        $('.done').show();\n        return Promise.resolve();\n      }\n\n      $('.done').hide();\n      alert('В файле есть ошибки');\n      return Promise.reject();\n    }\n\n    /**\n     * Добавление работников в БД\n     * @param opt\n     * @returns {Promise}\n     * @private\n     */\n\n  }, {\n    key: '_addWorkers',\n    value: function _addWorkers(opt) {\n      return new Promise(function (resolve, reject) {\n        if (opt.errors && opt.errors.length > 0) return reject('file has errors');\n\n        console.log(opt.edrpou);\n      });\n    }\n\n    /**\n     * И тут начинается пиздорез с проверкой\n     * @param edrpou\n     * @private\n     */\n\n  }, {\n    key: '_checkFile',\n    value: function _checkFile(edrpou) {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        var organization = _this3._parseFirstLine(_this3.lines[0]);\n        organization.edrpou = edrpou;\n\n        // получаем сотрудников\n        var workers = { main: { workers: [] } },\n            currentCategory = null,\n            currentSubCategory = null,\n            matches = void 0;\n\n        for (var i = 1; i < _this3.lines.length; i++) {\n          var line = _this3.lines[i].trim();\n          if (line.length == 0) continue;\n\n          // проверяем на неразрещенные символы\n          matches = _this3.CHECK_SYMBOLS.exec(line);\n          if (matches) {\n            _this3.addError('Неразрещенный символ', i, matches.index);\n          }\n\n          // =категория\n          matches = /^=([^=]+)$/.exec(line);\n          if (matches) {\n            if (currentCategory) {\n              _this3.addError('Открытие категории, но предыдущая еще не закрылась', i);\n            }\n            currentCategory = matches[1];\n            continue;\n          }\n\n          // закрытие категории \"==\"\n          if (/^\\s*==/.test(line)) {\n            if (!currentCategory) {\n              _this3.addError('Закрытие категории, но открытия не было', i);\n            }\n            currentCategory = null;\n            continue;\n          }\n\n          // -подкатегория\n          matches = /^-([^-].*)$/.exec(line);\n          if (matches) {\n            if (currentSubCategory) _this3.addError('Открытие подкатегории, но предыдущая еще не закрылась', i);\n            if (!currentCategory) _this3.addError('Открытие подкатегории, но родительская категория не была найдена', i);\n            currentSubCategory = matches[1];\n            continue;\n          }\n\n          // закрытие подкатегории \"--\"\n          if (/^\\s*--\\s*$/.test(line)) {\n            if (!currentSubCategory) _this3.addError('Закрытие подкатегории, но открытия не было', i);\n            currentSubCategory = null;\n            continue;\n          }\n\n          // парсим работников\n          var cat = currentCategory ? currentCategory : 'main';\n          if (!workers[cat]) workers[cat] = {\n            workers: [],\n            sub: {}\n          };\n          var curCategoryWorkers = void 0;\n\n          if (currentSubCategory) {\n            if (!workers[cat].sub[currentSubCategory]) workers[cat].sub[currentSubCategory] = [];\n            curCategoryWorkers = workers[cat].sub[currentSubCategory];\n          } else curCategoryWorkers = workers[cat].workers;\n\n          _this3._parseWorker(line, {\n            workers: curCategoryWorkers,\n            line: i\n          });\n        }\n\n        if (currentCategory) _this3.addError('Неверно открыты/закрыты категории.', _this3.lines.length - 1);\n\n        // проверяем работников по БД\n        _this3._checkWorkers(workers).then(function (fioErrors) {\n          resolve({ fioErrors: fioErrors, workers: workers, organization: organization });\n        }.bind(_this3));\n      });\n    }\n\n    /**\n     *\n     * @param value\n     * @returns {Object}\n     * @private\n     */\n\n  }, {\n    key: '_parseFirstLine',\n    value: function _parseFirstLine(value) {\n      var data = value.split(','),\n          date = data[0].trim(),\n          workersCount = data[1].trim();\n\n      // проверяем дату\n      if (!/^\\d{2}\\.\\d{2}\\.\\d{4}$/.test(date)) this.addError('Неверный формат даты \"' + date + '\" (должен быть <11.11.2222>)', 0);\n\n      // кол-во сотрудников\n      if (!/^(\\d+|-)$/.test(workersCount)) this.addError('Кол-во сотрудников указано неверно \"' + workersCount + '\" (должно быть число либо <->)', 0);\n\n      return {\n        workersCount: parseInt(data[1].trim()),\n        text: data.slice(2).join(',').trim(),\n        date: date\n      };\n    }\n\n    /**\n     *\n     * @param value\n     * @param opt\n     * @private\n     */\n\n  }, {\n    key: '_parseWorker',\n    value: function _parseWorker(value, opt) {\n      var lineMatches = /([^,]+),(.*)$/.exec(value);\n      if (!lineMatches) {\n        this.addError('Невозможно распознать ФИО и должность', opt.line);\n        return;\n      }\n\n      var fio = lineMatches[1].trim();\n      var position = lineMatches[2].trim();\n\n      if (!this.CHECK_LETTERS.test(position)) {\n        this.addError('Невозможно распознать ФИО и должность', opt.line);\n        return;\n      }\n\n      // проверяем чтобы первая буква должности была строчная\n      var matches = /^[^абвгґдеєжзиіїйклмнопрстуфхцчшщьюя]/.exec(position);\n      if (matches) {\n        this.addWarning('Проверте должность', opt.line, matches.index + lineMatches[1].length + (lineMatches[2].length - position.length) + 1);\n      }\n\n      matches = this.CHECK_FIO.exec(fio);\n      if (matches) {\n        this.addError('Неразрещенный символ', opt.line, matches.index);\n        return;\n      }\n\n      opt.workers.push({ fio: fio, position: position });\n    }\n\n    /**\n     * Проверяем ФИО по БД\n     * @param workers\n     * @returns {*}\n     * @private\n     */\n\n  }, {\n    key: '_checkWorkers',\n    value: function _checkWorkers(workers) {\n      // отправляем на сервер только массив ФИО\n      var data = [];\n      for (var i in workers) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = workers[i].workers[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var _worker = _step.value;\n\n            data.push(_worker.fio);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n\n        for (var j in workers[i].sub) {\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = workers[i].sub[j][Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var worker = _step2.value;\n\n              data.push(worker.fio);\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n        }\n      }\n\n      // проверяем фамилии на дубликаты\n      for (var _i = 0; _i < data.length; _i++) {\n        if (data.indexOf(data[_i], _i + 1) >= 0) {\n          this.fioDuplicates.push(data[_i]);\n        }\n      }\n\n      return $.ajax({\n        url: '/admin/api/worker/check_new_workers',\n        method: 'post',\n        data: {\n          workers: JSON.stringify(data)\n        }\n      });\n    }\n\n    /**\n     * Выводим файл и ошибки проверки файла\n     * @private\n     */\n\n  }, {\n    key: '_showFile',\n    value: function _showFile() {\n      var _this4 = this;\n\n      var $el = $('.file');\n      $el.html('');\n\n      // выводим построчно весь файл\n\n      var _loop = function _loop(i) {\n        var line = _this4.lines[i];\n\n        var getLineErrors = function getLineErrors(lineErrors) {\n          var cssClass = arguments.length <= 1 || arguments[1] === undefined ? 'error-sym' : arguments[1];\n\n          if (!lineErrors) return null;\n\n          var symbols = line.split('');\n          return lineErrors.map(function (err) {\n            // если есть позиция символа, выделяем его\n            if (err[1] >= 0) {\n              symbols[err[1]] = '<span class=\"' + cssClass + '\">' + symbols[err[1]] + '</span>';\n              line = symbols.join('');\n            }\n            return err[0] + '<br>';\n          });\n        };\n\n        // если в строке работник и по нему есть ошибки, выводим их\n        if (i != 0 && !/^(-|=)/.test(line) && line.length != 0) {\n          var matches = /([^,]+),/.exec(line);\n          if (!matches) return 'continue';\n\n          if (_this4.fioErrors.indexOf(matches[1]) >= 0) {\n            line = '<span class=\"warning-sym\">' + matches[1] + '</span>' + line.substr(matches[1].length);\n          }\n          // отмечаем ФИО как дубликат\n          if (_this4.fioDuplicates.indexOf(matches[1]) >= 0) {\n            line = '<span class=\"duplicate-sym\">' + line + '</span>';\n          }\n        }\n\n        var lineErrors = getLineErrors(_this4.errors[i]);\n        var lineWarnings = getLineErrors(_this4.warnings[i], 'warning-sym');\n\n        $el.append(line + '<br>');\n        if (lineErrors) $el.append('<p class=\"alert alert-danger\">' + lineErrors + '</p>');\n        if (!lineErrors && lineWarnings) $el.append('<p class=\"alert alert-warning\">' + lineWarnings + '</p>');\n      };\n\n      for (var i = 0; i < this.lines.length; i++) {\n        var _ret = _loop(i);\n\n        if (_ret === 'continue') continue;\n      }\n      return Promise.resolve();\n    }\n  }]);\n\n  return Controller;\n}();\n\nexports.default = new Controller();\n\n},{\"../helpers\":8}],6:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexports.default = new (function () {\n  function _class() {\n    _classCallCheck(this, _class);\n  }\n\n  _createClass(_class, [{\n    key: 'fio',\n\n    /**\n     * Страница с переводом ФИО\n     */\n    value: function fio() {\n      $('.page-fio-translate button').click(this._translate.bind(this));\n    }\n  }, {\n    key: '_translate',\n    value: function _translate() {\n      return $.ajax({\n        url: '/admin/api/translate/fio',\n        method: 'post',\n        data: {\n          firstName: $('#i').val(),\n          lastName: $('#f').val(),\n          middleName: $('#o').val()\n        },\n        success: function success(data) {\n          $('#i2').val(data.firstName);\n          $('#f2').val(data.lastName);\n          $('#o2').val(data.middleName);\n        }\n      });\n    }\n  }]);\n\n  return _class;\n}())();\n\n},{}],7:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nexports.default = new (function () {\n  function _class() {\n    _classCallCheck(this, _class);\n  }\n\n  _createClass(_class, [{\n    key: 'index',\n    value: function index(orgnaization, snapshot) {\n      $('.worker .name').click(this.editWorker.bind(this));\n      $('.department-name').click(this.editDepartment.bind(this, snapshot));\n    }\n\n    /**\n     * Редактирование сотрудника\n     * @param e\n     * @returns {*}\n     */\n\n  }, {\n    key: 'editWorker',\n    value: function editWorker(e) {\n      var $el = $(e.currentTarget),\n          source = $el.text().split(','),\n          data = {};\n\n      // спрашиваем ФИО\n      var answer = void 0;\n      if (_.isEmpty(answer = prompt('ФИО', source[0]))) return;\n      data.fio = answer.trim();\n\n      // спрашиваем должность\n      if (_.isEmpty(answer = prompt('должность', source[1].trim()))) return;\n      data.position = answer.trim();\n\n      return $.ajax({\n        method: 'post',\n        url: '/admin/api/worker/' + $el.data('id'),\n        data: data,\n        success: function success(data) {\n          return $el.html(data.fio + ', ' + data.position);\n        }\n      });\n    }\n\n    /**\n     * Редактирование название отдела\n     * @param snapshot\n     * @param e\n     */\n\n  }, {\n    key: 'editDepartment',\n    value: function editDepartment(snapshot, e) {\n      var $el = $(e.currentTarget),\n          name = $el.text();\n      var result = prompt('Отдел', name);\n      if (_.isEmpty(result)) return;\n\n      $.ajax({\n        method: 'post',\n        url: '/admin/api/worker/change_department',\n        data: {\n          snapshot: snapshot, name: name,\n          newName: result.trim(),\n          field: $el.data('sub') ? 'subDepartment' : 'department'\n        },\n        success: function success(data) {\n          return $el.html(result);\n        }\n      });\n    }\n  }]);\n\n  return _class;\n}())();\n\n},{}],8:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar helpers = exports.helpers = {\n  showPreloader: function showPreloader() {\n    $('body').addClass('preloader');\n  },\n\n  hidePreloader: function hidePreloader() {\n    $('body').removeClass('preloader');\n    return Promise.resolve();\n  }\n};\n\n},{}],9:[function(require,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _organization_create = require('./controllers/organization_create');\n\nvar _organization_create2 = _interopRequireDefault(_organization_create);\n\nvar _organization_workers = require('./controllers/organization_workers');\n\nvar _organization_workers2 = _interopRequireDefault(_organization_workers);\n\nvar _workers = require('./controllers/workers');\n\nvar _workers2 = _interopRequireDefault(_workers);\n\nvar _organization_list = require('./controllers/organization_list');\n\nvar _organization_list2 = _interopRequireDefault(_organization_list);\n\nvar _organization_inquiry = require('./controllers/organization_inquiry');\n\nvar _organization_inquiry2 = _interopRequireDefault(_organization_inquiry);\n\nvar _translate = require('./controllers/translate');\n\nvar _translate2 = _interopRequireDefault(_translate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Router =\n/**\n * Прогоняем роутфы и выполняем первый подходящий\n * @param url\n */\nfunction Router() {\n  var url = arguments.length <= 0 || arguments[0] === undefined ? window.location.pathname : arguments[0];\n\n  _classCallCheck(this, Router);\n\n  url = url.replace(/\\/$/, '');\n  // роуты добавлять здесь\n  var rules = [[_organization_list2.default.index.bind(_organization_list2.default), /admin\\/organization$/], [_organization_create2.default.index.bind(_organization_create2.default), /admin\\/organization\\/(create|\\d+\\/edit)$/], [_organization_create2.default.index.bind(_organization_create2.default), /admin\\/organization\\/\\d+\\/addDepartment$/], [_organization_inquiry2.default.index.bind(_organization_inquiry2.default), /admin\\/organization\\/\\d+\\/inquiry$/], [_organization_workers2.default.index.bind(_organization_workers2.default), /admin\\/organization\\/(\\d+)\\/addWorkers$/], [_workers2.default.index.bind(_workers2.default), /admin\\/organization\\/(\\d+)\\/snapshot\\/(\\d+)$/], [_translate2.default.fio.bind(_translate2.default), /translate$/]];\n\n  var matches = void 0;\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = rules[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var rule = _step.value;\n\n      if (matches = rule[1].exec(url)) {\n        if (typeof rule[0] != 'function') throw new Error('invalid route method \\'' + rule[1] + '\\'');\n        rule[0].apply(rule, _toConsumableArray(matches.slice(1)));\n        break;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n};\n\nexports.default = Router;\n\n},{\"./controllers/organization_create\":2,\"./controllers/organization_inquiry\":3,\"./controllers/organization_list\":4,\"./controllers/organization_workers\":5,\"./controllers/translate\":6,\"./controllers/workers\":7}]},{},[1]);\n"],"file":"admin_browserify.js","sourceRoot":"/source/"}